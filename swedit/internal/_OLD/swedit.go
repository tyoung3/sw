package main

/*StreamWork Go code. 
 Generated by sw/swgo.c-0.12.2 Fri Apr 23 14:26:17 2021
 Configuration file: ./sw.cfg
*/

/***********   Expanded swedit.sw Network Definition   **********   
(m swedit.Model ) 		<Requests-	1(c swedit.Control);	
(c swedit.Control ) 		<Events-	1(v swedit.View);	
(m swedit.Model )1 		<Updates-	2(c swedit.Control);	
(v swedit.View ) 		<Changes-	2(m swedit.Model);	
# 4 streams, 3 processes, 3 components, 1 partition, 2 cycles.
*********************************************/

import "sync"
import sw "github.com/tyoung3/sw/swbase"
import   "github.com/tyoung3/sw/swedit"


func main() {
	var cs []chan interface{}
	var wg sync.WaitGroup

cs = append(cs,make(chan interface{}))
cs = append(cs,make(chan interface{}))
cs = append(cs,make(chan interface{}))
cs = append(cs,make(chan interface{}))


	var cs_c []chan interface{}
	for i:=0; i<3; i++ {
		cs_c=append(cs_c, make(chan interface{},2))
	}
	cs_c[0] = cs[2]
	cs_c[1] = cs[3]
	cs_c[2] = cs[1]
sw.Launch(&wg,[]string{"c"},	   swedit.Control, cs_c[0:3])

	var cs_v []chan interface{}
	for i:=0; i<2; i++ {
		cs_v=append(cs_v, make(chan interface{},2))
	}
	cs_v[0] = cs[0]
	cs_v[1] = cs[2]
sw.Launch(&wg,[]string{"v"},	   swedit.View, cs_v[0:2])

	var cs_m []chan interface{}
	for i:=0; i<3; i++ {
		cs_m=append(cs_m, make(chan interface{},2))
	}
	cs_m[0] = cs[3]
	cs_m[1] = cs[1]
	cs_m[2] = cs[0]
sw.Launch(&wg,[]string{"m"},	   swedit.Model, cs_m[0:3])

wg.Wait()
}
